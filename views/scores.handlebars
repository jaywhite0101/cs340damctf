<!--
 * Citation for handlebars: Used the NodeJS starter app as a base for setting up the Handlebars pages. Used Handlebars documentation for further adjustment. Used the Modzilla web developer documentation for timestamp and points limits.
 * Date: 03/17/2025
 * Adapted from: OSU CS340 NodeJS Starter App
 * Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data , https://handlebarsjs.com/guide/#what-is-handlebars , https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local
-->
<h1>CTF Scores Management</h1>

<!-- Add Score Form -->
<h2>Add New Score</h2>
<form id="addScore" action="/scores/add" method="POST">
    <label for="participantId">Participant:</label><br>
    <select id="participantId" name="participantId" required>
        <option value="">Select Participant</option>
        {{#each participants}}
        <option value="{{this.participant_id}}">{{this.username}}</option>
        {{/each}}
    </select><br>

    <label for="challengeId">Challenge:</label><br>
    <select id="challengeId" name="challengeId" required>
        <option value="">Select Challenge</option>
        {{#each challenges}}
        <option value="{{this.challenge_id}}">{{this.challenge_name}} ({{this.max_points}} pts)</option>
        {{/each}}
    </select><br>

    <label for="score">Score:</label><br>
    <input type="number" id="score" name="score" min="0" max="1000000" required><br>

    <label for="timestamp">Timestamp:</label><br>
    <input type="datetime-local" id="timestamp" name="timestamp" required><br>

    <button type="submit">Add Score</button>
</form>

<!-- Display Scores -->
<h2>Current Scores</h2>
<table>
    <thead>
        <tr>
            <th>Score ID</th>
            <th>Participant</th>
            <th>Challenge</th>
            <th>Score</th>
            <th>Timestamp</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        {{#each scores}}
        <tr>
            <td>{{this.score_id}}</td>
            <td>{{this.username}}</td>
            <td>{{this.challenge_name}}</td>
            <td>{{this.score}}</td>
            <td>{{this.timestamp}}</td>
            <td>
                <a href="/scores/edit/{{this.score_id}}">Edit</a>
                <a href="/scores/delete/{{this.score_id}}" onclick="return confirm('Are you sure you want to delete this score?')">Delete</a>
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get current datetime
        const now = new Date().toISOString().slice(0, 16);

        // Set max date for timestamp input to prevent future dates
        const timestampInput = document.getElementById('timestamp');
        if (timestampInput) {
            timestampInput.setAttribute('max', now);
        }

        // Get challenge dropdown
        const challengeDropdown = document.getElementById('challengeId');
        const scoreInput = document.getElementById('score');

        // Add event listener to update max score when challenge is selected
        if(challengeDropdown && scoreInput) {
            challengeDropdown.addEventListener('change', function() {
                const selectedOption = this.options[this.selectedIndex];
                const maxPoints = selectedOption.text.match(/\((\d+) pts\)/);

                if (maxPoints && maxPoints[1]) {
                    scoreInput.setAttribute('max', maxPoints[1]);
                } else {
                    scoreInput.setAttribute('max', '1000000');
                }
            });
        }
    });
</script>
